<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="micro__ros____parameters_8cpp" kind="file" language="C++">
    <compoundname>micro_ros__parameters.cpp</compoundname>
    <includes refid="micro__ros____parameters_8h" local="yes">micro_ros__parameters.h</includes>
      <sectiondef kind="var">
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a72b7850231d565312c959cdf960e110e" prot="public" static="no" mutable="no">
        <type>rclc_parameter_server_t</type>
        <definition>rclc_parameter_server_t parameterService</definition>
        <argsstring></argsstring>
        <name>parameterService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="12" column="25" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a1bb6e45ea1a7fa12b2ad42a7adc69686" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t controllerMode</definition>
        <argsstring></argsstring>
        <name>controllerMode</name>
        <initializer>= {
    .key=PARAM_NAME__CONTROLLER_MODE, 
    .type=RCLC_PARAMETER_INT,
    .onChangePtr=controllerModeChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="13" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a2d0a7b97699ac77d10b822fd3719592d" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t polePairs</definition>
        <argsstring></argsstring>
        <name>polePairs</name>
        <initializer>{
    .key=PARAM_NAME__POLE_PAIRS, 
    .type=RCLC_PARAMETER_INT,
    .onChangePtr=polePairsChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="18" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1af206e46c7e6547e0ee76c65d7f75a3bc" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t phaseResistance</definition>
        <argsstring></argsstring>
        <name>phaseResistance</name>
        <initializer>{
    .key=PARAM_NAME__PHASE_RESISTANCE, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=phaseResistanceChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="23" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1afc9c3b721bd653ef549d81ad3cdbdcbf" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t kvRating</definition>
        <argsstring></argsstring>
        <name>kvRating</name>
        <initializer>{
    .key=PARAM_NAME__KV_RATING, 
    .type=RCLC_PARAMETER_INT,
    .onChangePtr=kvRatingChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="28" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a77361e5500531aac6de92f22802f8f0c" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t phaseInductance</definition>
        <argsstring></argsstring>
        <name>phaseInductance</name>
        <initializer>{
    .key=PARAM_NAME__PHASE_INDUCTANCE, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=phaseInductanceChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="33" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1aed2472f2ed73310a0f210710318d73c2" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t velocityP</definition>
        <argsstring></argsstring>
        <name>velocityP</name>
        <initializer>{
    .key=PARAM_NAME__VELOCITY_P, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=velocityPChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="38" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a4465ab85e82a6b6cd897c80a971bfe21" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t velocityI</definition>
        <argsstring></argsstring>
        <name>velocityI</name>
        <initializer>{
    .key=PARAM_NAME__VELOCITY_I,
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=velocityIChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="43" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a0ac95453884a2927f369a16cc2a717c0" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t velocityD</definition>
        <argsstring></argsstring>
        <name>velocityD</name>
        <initializer>{
    .key=PARAM_NAME__VELOCITY_D, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=velocityDChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="48" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1aa8949827ed2cf43d7ce1ac35796eb8c3" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t velocityOutputRamp</definition>
        <argsstring></argsstring>
        <name>velocityOutputRamp</name>
        <initializer>{
    .key=PARAM_NAME__VELOCITY_OUTPUT_RAMP, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=velocityRampChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="53" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a13a3c0a1ed4cba102f6d84c1f7136406" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t velocityLPFTf</definition>
        <argsstring></argsstring>
        <name>velocityLPFTf</name>
        <initializer>{
    .key=PARAM_NAME__VELOCITY_LPF_TF, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=velocityLPFChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="58" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1af7d79cdfef5c3e940041f393cdb00b40" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t angleP</definition>
        <argsstring></argsstring>
        <name>angleP</name>
        <initializer>{
    .key=PARAM_NAME__ANGLE_P, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=anglePChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="63" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1add22122ce27ff4427036714c75250597" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t angleI</definition>
        <argsstring></argsstring>
        <name>angleI</name>
        <initializer>{
    .key=PARAM_NAME__ANGLE_I, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=angleIChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="68" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a2c0003953dcd696443be27bb2831bcdf" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t angleD</definition>
        <argsstring></argsstring>
        <name>angleD</name>
        <initializer>{
    .key=PARAM_NAME__ANGLE_D, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=angleDChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="73" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a8fbb5732e488cb1904c29de64c38e899" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t angleOutputRamp</definition>
        <argsstring></argsstring>
        <name>angleOutputRamp</name>
        <initializer>{
    .key=PARAM_NAME__ANGLE_OUTPUT_RAMP, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=angleRampChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="78" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a7e05270ae880a1bb12fc9bb5648b2006" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t angleLPFTf</definition>
        <argsstring></argsstring>
        <name>angleLPFTf</name>
        <initializer>{
    .key=PARAM_NAME__ANGLE_LPF_TF, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=angleLFPChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="83" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1a9ea484a1230ffc361b49afbf247759b6" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t driverVoltageLimit</definition>
        <argsstring></argsstring>
        <name>driverVoltageLimit</name>
        <initializer>{
    .key=PARAM_NAME__DRIVER_VOLTAGE_LIMIT, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=driverVoltageLimitChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="88" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1ad5a2179c744c73eb7e9ecf2144ef7388" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t motorVoltageLimit</definition>
        <argsstring></argsstring>
        <name>motorVoltageLimit</name>
        <initializer>{
    .key=PARAM_NAME__MOTOR_VOLTAGE_LIMIT, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=motorVoltageLimitChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="93" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1ada9bf524b482be838df28f67351979d9" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t motorCurrentLimit</definition>
        <argsstring></argsstring>
        <name>motorCurrentLimit</name>
        <initializer>{
    .key=PARAM_NAME__MOTOR_CURRENT_LIMIT, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=motorCurrentLimitChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="98" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1acaac4cad154ecaf5981dcea681491f4b" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref></type>
        <definition>parameter_t motorVelocityLimit</definition>
        <argsstring></argsstring>
        <name>motorVelocityLimit</name>
        <initializer>{
    .key=PARAM_NAME__MOTOR_VELOCITY_LIMIT, 
    .type=RCLC_PARAMETER_DOUBLE,
    .onChangePtr=motorVelocityLimitChangeCallback
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="103" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="micro__ros____parameters_8cpp_1abff3a2afdf48423b36b5238e017f22b3" prot="public" static="no" mutable="no">
        <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
        <definition>parameter_t* params[NUM_PARAMETERS]</definition>
        <argsstring>[NUM_PARAMETERS]</argsstring>
        <name>params</name>
        <initializer>= {
    &amp;controllerMode,
    &amp;polePairs,
    &amp;phaseResistance,
    &amp;kvRating,
    &amp;phaseInductance,
    &amp;velocityP,
    &amp;velocityI,
    &amp;velocityD,
    &amp;velocityOutputRamp,
    &amp;velocityLPFTf,
    &amp;angleP,
    &amp;angleI,
    &amp;angleD,
    &amp;angleOutputRamp,
    &amp;angleLPFTf,
    &amp;driverVoltageLimit,
    &amp;motorVoltageLimit,
    &amp;motorCurrentLimit,
    &amp;motorVelocityLimit
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="109" column="13" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a99cdfc45749b484a8e5ab6a9144b515f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeParameterService</definition>
        <argsstring>()</argsstring>
        <name>initializeParameterService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="185" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="185" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1aa18b2ee6603b11159022f0ca6bb3274b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool onParameterChangedCallback</definition>
        <argsstring>(const Parameter *oldParam, const Parameter *newParam, void *context)</argsstring>
        <name>onParameterChangedCallback</name>
        <param>
          <type>const Parameter *</type>
          <declname>oldParam</declname>
        </param>
        <param>
          <type>const Parameter *</type>
          <declname>newParam</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="222" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="222" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a3caede0a5b5f76ead9c72109763eba0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveParam</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>saveParam</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="268" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="268" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a36ca7e44c19cdca2087c503898543613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void controllerModeChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>controllerModeChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="293" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="293" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a0b7bcda7886e06713b98a836e69eaf17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void polePairsChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>polePairsChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="345" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1ac7b2f196d98ef30f860321029f64609d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void phaseResistanceChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>phaseResistanceChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="350" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a3985e05a30b87b8bde70c9a994edde2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kvRatingChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>kvRatingChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="354" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1aecd4bb1435659db77aac17efa81a044e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void phaseInductanceChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>phaseInductanceChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="358" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a3c845d42425928628b3074afc529aec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void velocityPChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>velocityPChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="362" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1af45af447027d1a58339429c73343b57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void velocityIChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>velocityIChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="366" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1ab4164956d69c05b0e9fff4bed7021ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void velocityDChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>velocityDChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="370" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1aaf072f8e5814a786f368733f3c669b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void velocityRampChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>velocityRampChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="374" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="374" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1aa55c882de0585c1a7ff8147ae4800299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void velocityLPFChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>velocityLPFChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="378" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="378" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a588aea920d6bcae6d73c03f50f5f1af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anglePChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>anglePChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="382" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a6bec8c986cc7a4de552cb6ffab7495ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void angleIChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>angleIChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="386" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1ae1045b9d26ea1548d739eac8f90e6739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void angleDChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>angleDChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="390" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="390" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a318427b72653844a8fefcf403f12bdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void angleRampChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>angleRampChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="394" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="394" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1abbb4cff01e1c92361aca9e11faa8762b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void angleLFPChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>angleLFPChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="398" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1ab8c5518919dc86fc48605e38c566847d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void driverVoltageLimitChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>driverVoltageLimitChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="402" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1aebc4bbf7c3e1a6a7bd6946cc517c3afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void motorVoltageLimitChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>motorVoltageLimitChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="406" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1ac14dd4cec164084457f2e1682d186196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void motorCurrentLimitChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>motorCurrentLimitChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="410" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="micro__ros____parameters_8cpp_1a24934f216c79bdd06478247329acf87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void motorVelocityLimitChangeCallback</definition>
        <argsstring>(parameter_t *param)</argsstring>
        <name>motorVelocityLimitChangeCallback</name>
        <param>
          <type><ref refid="structparameter__t" kindref="compound">parameter_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/micro_ros__parameters.cpp" line="414" column="6" bodyfile="firmware/src/micro_ros__parameters.cpp" bodystart="414" bodyend="416"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;micro_ros__parameters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>PARAMETER<sp/>DEFINITIONS<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">Preferences<sp/>parameterSettings;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">rclc_parameter_server_t<sp/>parameterService;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>controllerMode<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__CONTROLLER_MODE,<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_INT,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=controllerModeChangeCallback</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>polePairs{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__POLE_PAIRS,<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_INT,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=polePairsChangeCallback</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>phaseResistance{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__PHASE_RESISTANCE,<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=phaseResistanceChangeCallback</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>kvRating{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__KV_RATING,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_INT,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=kvRatingChangeCallback</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>phaseInductance{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__PHASE_INDUCTANCE,<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=phaseInductanceChangeCallback</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>velocityP{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__VELOCITY_P,<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=velocityPChangeCallback</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>velocityI{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__VELOCITY_I,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=velocityIChangeCallback</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>velocityD{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__VELOCITY_D,<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=velocityDChangeCallback</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>velocityOutputRamp{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__VELOCITY_OUTPUT_RAMP,<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=velocityRampChangeCallback</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>velocityLPFTf{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__VELOCITY_LPF_TF,<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=velocityLPFChangeCallback</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>angleP{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__ANGLE_P,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=anglePChangeCallback</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>angleI{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__ANGLE_I,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=angleIChangeCallback</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>angleD{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__ANGLE_D,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=angleDChangeCallback</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>angleOutputRamp{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__ANGLE_OUTPUT_RAMP,<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=angleRampChangeCallback</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>angleLPFTf{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__ANGLE_LPF_TF,<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=angleLFPChangeCallback</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>driverVoltageLimit{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__DRIVER_VOLTAGE_LIMIT,<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=driverVoltageLimitChangeCallback</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>motorVoltageLimit{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__MOTOR_VOLTAGE_LIMIT,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=motorVoltageLimitChangeCallback</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>motorCurrentLimit{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__MOTOR_CURRENT_LIMIT,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=motorCurrentLimitChangeCallback</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>motorVelocityLimit{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>.key=PARAM_NAME__MOTOR_VELOCITY_LIMIT,<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>.type=RCLC_PARAMETER_DOUBLE,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>.onChangePtr=motorVelocityLimitChangeCallback</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>params[NUM_PARAMETERS]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;controllerMode,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;polePairs,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;phaseResistance,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;kvRating,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;phaseInductance,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;velocityP,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;velocityI,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;velocityD,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;velocityOutputRamp,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;velocityLPFTf,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;angleP,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;angleI,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;angleD,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;angleOutputRamp,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;angleLPFTf,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;driverVoltageLimit,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;motorVoltageLimit,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;motorCurrentLimit,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;motorVelocityLimit</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadPreferences()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>parameterSettings.begin(</highlight><highlight class="stringliteral">&quot;uros_params&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameterSettings.clear();<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parameterSettings.isKey(PARAM_NAME__CONTROLLER_MODE))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>first<sp/>run<sp/>and<sp/>initialize<sp/>with<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.println(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>parameter<sp/>file.<sp/>Initializing<sp/>defaults...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putInt(PARAM_NAME__CONTROLLER_MODE,<sp/>VELOCITY_OPEN_LOOP);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putInt(PARAM_NAME__POLE_PAIRS,<sp/>7);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__PHASE_RESISTANCE,<sp/>3.0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putInt(PARAM_NAME__KV_RATING,<sp/>600);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__PHASE_INDUCTANCE,<sp/>3.0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__VELOCITY_P,<sp/>0.5);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__VELOCITY_I,<sp/>10.0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__VELOCITY_D,<sp/>0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__VELOCITY_OUTPUT_RAMP,<sp/>300);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__VELOCITY_LPF_TF,<sp/>5);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__ANGLE_P,<sp/>20);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__ANGLE_I,<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__ANGLE_D,<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__ANGLE_OUTPUT_RAMP,<sp/>1e6);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__ANGLE_LPF_TF,<sp/>0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__DRIVER_VOLTAGE_LIMIT,<sp/>7);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__MOTOR_VOLTAGE_LIMIT,<sp/>7);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__MOTOR_CURRENT_LIMIT,<sp/>0.2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(PARAM_NAME__MOTOR_VELOCITY_LIMIT,<sp/>10);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.println(&quot;Found<sp/>parameter<sp/>file&quot;);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.println(&quot;Loading<sp/>parameters<sp/>into<sp/>memory...&quot;);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>parameter<sp/>array<sp/>in<sp/>memory<sp/>and<sp/>put<sp/>loaded<sp/>values<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_PARAMETERS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Loading<sp/>key:<sp/>%s...\t&quot;,<sp/>params[i]-&gt;key);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params[i]-&gt;type<sp/>==<sp/>RCLC_PARAMETER_BOOL)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;bool_value<sp/>=<sp/>parameterSettings.getBool(params[i]-&gt;key);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Got<sp/>boolean<sp/>parameter!\tValue:<sp/>%s\r\n&quot;,<sp/>params[i]-&gt;bool_value<sp/>?<sp/>&quot;TRUE&quot;<sp/>:<sp/>&quot;FALSE&quot;);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params[i]-&gt;type<sp/>==<sp/>RCLC_PARAMETER_INT)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;integer_value<sp/>=<sp/>parameterSettings.getInt(params[i]-&gt;key);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Got<sp/>integer<sp/>parameter!\tValue:<sp/>%d\r\n&quot;,<sp/>params[i]-&gt;integer_value);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params[i]-&gt;type<sp/>==<sp/>RCLC_PARAMETER_DOUBLE)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;double_value<sp/>=<sp/>parameterSettings.getDouble(params[i]-&gt;key);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Got<sp/>double<sp/>parameter!\tValue:<sp/>%0.3f\r\n&quot;,<sp/>params[i]-&gt;double_value);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;type<sp/>=<sp/>RCLC_PARAMETER_NOT_SET;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeParameterService()<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>loadPreferences();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Support<sp/>out<sp/>NVS<sp/>systems<sp/>for<sp/>other<sp/>MCUs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>parameters<sp/>to<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial1.println(</highlight><highlight class="stringliteral">&quot;Adding<sp/>parameters<sp/>to<sp/>server...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_PARAMETERS;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>array<sp/>of<sp/>parameter<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params[i]-&gt;type<sp/>==<sp/>RCLC_PARAMETER_NOT_SET)<sp/>{<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>bad<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCSOFTCHECK(rclc_add_parameter(&amp;parameterService,<sp/>params[i]-&gt;key,<sp/>params[i]-&gt;type));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(params[i]-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_BOOL:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCSOFTCHECK(rclc_parameter_set_bool(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;parameterService,<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;key,<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;bool_value));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_INT:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCSOFTCHECK(rclc_parameter_set_int(</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;parameterService,<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;key,<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;integer_value));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_DOUBLE:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCSOFTCHECK(rclc_parameter_set_double(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;parameterService,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;key,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;double_value));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onParameterChangedCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameter*<sp/>oldParam,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameter*<sp/>newParam,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>context;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldParam<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>newParam<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>callback<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.printf(</highlight><highlight class="stringliteral">&quot;Callback<sp/>error,<sp/>both<sp/>parameters<sp/>are<sp/>NULL\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldParam<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>new<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.printf(</highlight><highlight class="stringliteral">&quot;Creating<sp/>new<sp/>parameter<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>newParam-&gt;name.data);<sp/></highlight><highlight class="comment">//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>new<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newParam<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>deleting<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.printf(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>parameter<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>oldParam-&gt;name.data);<sp/></highlight><highlight class="comment">//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>deleting<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>changing<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Checking<sp/>for:<sp/>%s\r\n&quot;,<sp/>newParam-&gt;name.data);<sp/>//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i=0;<sp/>i&lt;NUM_PARAMETERS;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>parameter<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.printf(</highlight><highlight class="stringliteral">&quot;\t<sp/>Comparing<sp/>against:<sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>params[i]-&gt;key);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(newParam-&gt;name.data,<sp/>params[i]-&gt;key)<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>parameter<sp/>is<sp/>in<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial1.printf(&quot;Editing<sp/>%s\r\n&quot;,<sp/>params[i]-&gt;key);<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(newParam-&gt;value.type)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>parameter<sp/>type<sp/>and<sp/>set<sp/>new<sp/>value<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_BOOL:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;bool_value<sp/>=<sp/>newParam-&gt;value.bool_value;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_INT:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;integer_value<sp/>=<sp/>newParam-&gt;value.integer_value;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_DOUBLE:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;double_value<sp/>=<sp/>newParam-&gt;value.double_value;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[i]-&gt;onChange();<sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>the<sp/>parameters<sp/>change<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveParam(params[i]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveParam(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>replace<sp/>parameterSettings<sp/>call<sp/>with<sp/>generic<sp/>&quot;save<sp/>bool/int/double&quot;<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(param-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_BOOL:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putBool(param-&gt;key,<sp/>param-&gt;bool_value);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_INT:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putInt(param-&gt;key,<sp/>param-&gt;integer_value);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCLC_PARAMETER_DOUBLE:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterSettings.putDouble(param-&gt;key,<sp/>param-&gt;double_value);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>PARAMETER<sp/>CHANGE<sp/>CALLBACKS<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>controllerModeChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>_mode<sp/>=<sp/>param-&gt;integer_value;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isClosedLoop<sp/>=<sp/>_mode<sp/>&lt;<sp/>SetControlMode_ModeCodes::POSITION_OPEN_LOOP;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isTorqueControl<sp/>=<sp/>_mode<sp/>&gt;=<sp/>SetControlMode_ModeCodes::TORQUE_VOLTAGE<sp/>&amp;&amp;<sp/>_mode<sp/>&lt;=<sp/>SetControlMode_ModeCodes::TORQUE_FOC_CURRENT;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>motor<sp/>failure<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(motor.motor_status<sp/>==<sp/>FOCMotorStatus::motor_error<sp/>||</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.motor_status<sp/>==<sp/>FOCMotorStatus::motor_calib_failed<sp/>||</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.motor_status<sp/>==<sp/>FOCMotorStatus::motor_init_failed)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>res_in-&gt;result<sp/>=<sp/>SetControlMode_ResultCodes::FAILURE_FOC_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>requested<sp/>mode<sp/>is<sp/>closed-loop<sp/>and<sp/>feedback<sp/>sensor<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((_isClosedLoop<sp/>&amp;&amp;<sp/>!angleSensorInitialized))<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>torque<sp/>control<sp/>without<sp/>angle<sp/>sensor,<sp/>but<sp/>with<sp/>current<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(_isTorqueControl<sp/>&amp;&amp;<sp/>currentSensorInitialized))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>res_in-&gt;result<sp/>=<sp/>SetControlMode_ResultCodes::FAILURE_FEEDBACK_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>controller<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_mode)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::POSITION_CLOSED_LOOP:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::angle;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::VELOCITY_CLOSED_LOOP:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::velocity;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::TORQUE_VOLTAGE:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::TORQUE_CURRENT:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::TORQUE_FOC_CURRENT:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::torque;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::POSITION_OPEN_LOOP:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::angle_openloop;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SetControlMode_ModeCodes::VELOCITY_OPEN_LOOP:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::velocity_openloop;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>res_in-&gt;result<sp/>=<sp/>SetControlMode_ResultCodes::FAILURE_UNSPECIFIED;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>successful<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>res_in-&gt;result<sp/>=<sp/>SetControlMode_ResultCodes::SUCCESS;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial1.println(</highlight><highlight class="stringliteral">&quot;Set<sp/>motor<sp/>control<sp/>mode<sp/>Using<sp/>callback!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>polePairsChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.pole_pairs<sp/>=<sp/>param-&gt;integer_value;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial1.println(</highlight><highlight class="stringliteral">&quot;Set<sp/>pole<sp/>pairs<sp/>Using<sp/>callback!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>phaseResistanceChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.phase_resistance<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kvRatingChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.KV_rating<sp/>=<sp/>param-&gt;integer_value;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>phaseInductanceChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.phase_inductance<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>velocityPChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.P<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>velocityIChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.I<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>velocityDChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.D<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>velocityRampChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.output_ramp<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>velocityLPFChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.LPF_velocity.Tf<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>anglePChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.P_angle.P<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angleIChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.P_angle.I<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angleDChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.P_angle.D<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angleRampChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.P_angle.output_ramp<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angleLFPChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.LPF_angle.Tf<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>driverVoltageLimitChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>driver.voltage_limit<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>motorVoltageLimitChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.voltage_limit<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>motorCurrentLimitChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.current_limit<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>motorVelocityLimitChangeCallback(<ref refid="structparameter__t" kindref="compound">parameter_t</ref>*<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.voltage_limit<sp/>=<sp/>param-&gt;double_value;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="firmware/src/micro_ros__parameters.cpp"/>
  </compounddef>
</doxygen>
