<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="velocity__controller_8cpp" kind="file" language="C++">
    <compoundname>velocity_controller.cpp</compoundname>
    <includes local="no">SimpleFOC.h</includes>
    <includes local="no">SparkFun_TMAG5273_Arduino_Library.h</includes>
    <includes local="no">Arduino.h</includes>
    <incdepgraph>
      <node id="3">
        <label>SparkFun_TMAG5273_Arduino_Library.h</label>
      </node>
      <node id="1">
        <label>firmware/src/examples/velocity_controller/velocity_controller.cpp</label>
        <link refid="velocity__controller_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SimpleFOC.h</label>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="velocity__controller_8cpp_1a9343f492686bfe94b4735ca07dd49aa3" prot="public" static="no" mutable="no">
        <type>TMAG5273</type>
        <definition>TMAG5273 sensor</definition>
        <argsstring></argsstring>
        <name>sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="8" column="10" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="velocity__controller_8cpp_1a43d80622234e4367e362e93b7d565fe9" prot="public" static="no" mutable="no">
        <type>GenericSensor</type>
        <definition>GenericSensor sensorFOC</definition>
        <argsstring></argsstring>
        <name>sensorFOC</name>
        <initializer>= GenericSensor(readTMAG5273Callback, initTMAG5273Callback)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="9" column="15" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="velocity__controller_8cpp_1a98c14dc9cab98a575a69b871b98716f7" prot="public" static="no" mutable="no">
        <type>BLDCMotor</type>
        <definition>BLDCMotor motor</definition>
        <argsstring></argsstring>
        <name>motor</name>
        <initializer>= BLDCMotor(7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="10" column="11" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="velocity__controller_8cpp_1a773de43e86b02898d484d10269046d53" prot="public" static="no" mutable="no">
        <type>BLDCDriver6PWM</type>
        <definition>BLDCDriver6PWM driver</definition>
        <argsstring></argsstring>
        <name>driver</name>
        <initializer>= BLDCDriver6PWM(
                            PHASE_U_HIGH, PHASE_U_LOW, 
                            PHASE_V_HIGH, PHASE_V_LOW, 
                            PHASE_W_HIGH, PHASE_W_LOW, 
                            DRIVER_ENABLE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="11" column="16" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="velocity__controller_8cpp_1af0df2177301e4061ab72ade2ea437bcd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="17" column="7" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="velocity__controller_8cpp_1a3c6a37bc0036000a15e2fd8ab210f220" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float target_velocity</definition>
        <argsstring></argsstring>
        <name>target_velocity</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="90" column="7" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="velocity__controller_8cpp_1aec4b6990ed1c828cbaa9325ffcccb0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initTMAG5273Callback</definition>
        <argsstring>()</argsstring>
        <name>initTMAG5273Callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="19" column="6" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="19" bodyend="26" declfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" declline="5" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="velocity__controller_8cpp_1af0ef01945756ce82a3e53cabab6aa93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float readTMAG5273Callback</definition>
        <argsstring>()</argsstring>
        <name>readTMAG5273Callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="27" column="7" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="27" bodyend="29" declfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" declline="6" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="velocity__controller_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="31" column="6" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="31" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="velocity__controller_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp" line="92" column="6" bodyfile="firmware/src/examples/velocity_controller/velocity_controller.cpp" bodystart="92" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;SimpleFOC.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SparkFun_TMAG5273_Arduino_Library.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTMAG5273Callback();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>readTMAG5273Callback();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">TMAG5273<sp/>sensor;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">GenericSensor<sp/>sensorFOC<sp/>=<sp/>GenericSensor(readTMAG5273Callback,<sp/>initTMAG5273Callback);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">BLDCMotor<sp/>motor<sp/>=<sp/>BLDCMotor(7);</highlight></codeline>
<codeline lineno="11"><highlight class="normal">BLDCDriver6PWM<sp/>driver<sp/>=<sp/>BLDCDriver6PWM(</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE_U_HIGH,<sp/>PHASE_U_LOW,<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE_V_HIGH,<sp/>PHASE_V_LOW,<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE_W_HIGH,<sp/>PHASE_W_LOW,<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DRIVER_ENABLE);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTMAG5273Callback()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor.setAngleEn(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sensor.begin(TMAG5273_I2C_ADDRESS_INITIAL))<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Sensor<sp/>failed<sp/>to<sp/>init...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor.setAngleEn(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>readTMAG5273Callback()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor.getAngleResult()<sp/>/<sp/>180<sp/>*<sp/>PI;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>monitoring<sp/>with<sp/>serial<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>magnetic<sp/>sensor<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>FOC<sp/>sensor...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorFOC.init();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>the<sp/>motor<sp/>to<sp/>the<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.linkSensor(&amp;sensorFOC);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>driver<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>driver...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>driver.voltage_power_supply<sp/>=<sp/>3.3;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>driver.pwm_frequency<sp/>=<sp/>20000;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>driver.voltage_limit<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>driver.init();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.linkDriver(&amp;driver);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>motion<sp/>control<sp/>loop<sp/>to<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.voltage_limit<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.KV_rating<sp/>=<sp/>600;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.controller<sp/>=<sp/>MotionControlType::velocity;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controller<sp/>configuration<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>parameters<sp/>in<sp/>defaults.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controller<sp/>configuration<sp/>based<sp/>on<sp/>the<sp/>control<sp/>type<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>PID<sp/>controller<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>P=0.5<sp/>I<sp/>=<sp/>10<sp/>D<sp/>=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.P<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.I<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.D<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jerk<sp/>control<sp/>using<sp/>voltage<sp/>voltage<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>value<sp/>is<sp/>300<sp/>volts<sp/>per<sp/>sec<sp/><sp/>~<sp/>0.3V<sp/>per<sp/>millisecond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.PID_velocity.output_ramp<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>low<sp/>pass<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>5ms<sp/>-<sp/>try<sp/>different<sp/>values<sp/>to<sp/>see<sp/>what<sp/>is<sp/>the<sp/>best.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>lower<sp/>the<sp/>less<sp/>filtered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.LPF_velocity.Tf<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>phase<sp/>resistance<sp/>is<sp/>provided<sp/>we<sp/>set<sp/>the<sp/>current<sp/>limit<sp/>not<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.current_limit<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Amps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comment<sp/>out<sp/>if<sp/>not<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.useMonitoring(Serial);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>motor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.init();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>sensor<sp/>and<sp/>start<sp/>FOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.initFOC();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Motor<sp/>ready.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>_delay(1000);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>velocity<sp/>set<sp/>point<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_velocity<sp/>=<sp/>50;<sp/></highlight><highlight class="comment">//<sp/>2Rad/s<sp/>~<sp/>20rpm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>FOC<sp/>algorithm<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.loopFOC();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Motion<sp/>control<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>motor.move(target_velocity);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="firmware/src/examples/velocity_controller/velocity_controller.cpp"/>
  </compounddef>
</doxygen>
